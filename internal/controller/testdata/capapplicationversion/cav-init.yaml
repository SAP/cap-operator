apiVersion: sme.sap.com/v1alpha1
kind: CAPApplicationVersion
metadata:
  creationTimestamp: "2022-07-18T06:13:52Z"
  generation: 1
  annotations:
    sme.sap.com/btp-app-identifier: btp-glo-acc-id.test-cap-01
    sme.sap.com/owner-identifier: default.test-cap-01
  labels:
    sme.sap.com/btp-app-identifier-hash: f20cc8aeb2003b3abc33f749a16bd53544b6bab2
    sme.sap.com/owner-generation: "2"
    sme.sap.com/owner-identifier-hash: 1f74ae2fbff71a708786a4df4bb2ca87ec603581
  name: test-cap-01-cav-v1
  namespace: default
  ownerReferences:
    - apiVersion: sme.sap.com/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: CAPApplication
      name: test-cap-01
      uid: 3c7ba7cb-dc04-4fd1-be86-3eb3a5c64a98
  resourceVersion: "11371108"
  uid: 5e64489b-7346-4984-8617-e8c37338b3d8
spec:
  capApplicationInstance: test-cap-01
  registrySecrets:
    - regcred
  version: 1.2.3
  workloads:
    - name: cap-backend-srv
      consumedBTPServices:
        - cap-uaa
        - cap-service-manager
        - cap-saas-registry
      deploymentDefinition:
        image: docker.image.repo/srv/server:latest
        type: CAP
        env:
          - name: HOST_IP
            valueFrom:
              fieldRef:
                fieldPath: status.PodIp
        ports:
          - name: "app-port"
            port: 4004
            routerDestinationName: "srv-api"
            appProtocol: http
          - name: "app-tech-port"
            port: 4005
            networkPolicy: "Cluster"
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: 4004
          initialDelaySeconds: 20
          periodSeconds: 10
          timeoutSeconds: 2
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: 4004
          initialDelaySeconds: 20
          periodSeconds: 10
          timeoutSeconds: 2
        resources:
          limits:
            cpu: 200m
            memory: 500Mi
          requests:
            cpu: 20m
            memory: 50Mi
    - name: app-router
      consumedBTPServices:
        - cap-uaa
        - cap-saas-registry
      deploymentDefinition:
        image: docker.image.repo/approuter/approuter:latest
        type: Router
        volumeMounts:
          - name: xsapp-vol
            mountPath: /usr/app/xsapp.json
            subPath: xsapp.json
        env:
          - name: debug
            valueFrom:
              configMapKeyRef:
                key: someKey
                name: someCM
                optional: true
        ports:
          - name: "router-port"
            port: 4000
            appProtocol: http
          - name: "router-tech-port"
            port: 4004
            networkPolicy: "Cluster"
          - name: "router-metrics-port"
            port: 4007
            networkPolicy: "Cluster"
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: 4000
          initialDelaySeconds: 20
          periodSeconds: 10
          timeoutSeconds: 2
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: 4000
          initialDelaySeconds: 20
          periodSeconds: 10
          timeoutSeconds: 2
        resources:
          limits:
            cpu: 200m
            memory: 500Mi
          requests:
            cpu: 20m
            memory: 50Mi
        nodeName: app
        priorityClassName: some-prio
        serviceAccountName: custom-router-sa
        volumes:
          - name: xsapp-vol
            configMap:
              name: xsapp-config
          - name: log-data
            emptyDir: {}
        initContainers:
          - name: init-container
            image: docker.image.repo/init-container:latest
            env:
              - name: INIT_CONTAINER_ENV
                value: "init-container-env"
            resources:
              limits:
                cpu: 100m
                memory: 200Mi
              requests:
                cpu: 10m
                memory: 20Mi
          - name: log-container
            image: docker.image.repo/log-container:latest
            restartPolicy: Always
            command: ['sh', '-c', 'tail -F /log/logs.txt']
            volumeMounts:
              - name: log-data
                mountPath: /log
            env:
              - name: LOG_CONTAINER_ENV
                value: "log-container-env"
            resources:
              limits:
                cpu: 100m
                memory: 200Mi
              requests:
                cpu: 10m
                memory: 20Mi
    - name: content-job
      consumedBTPServices:
        - cap-uaa
      jobDefinition:
        image: docker.image.repo/content/cap-content:latest
        type: Content
        env:
          - name: SOME_VERSION
            value: 0.0.1
        resources:
          limits:
            cpu: 100m
            memory: 200Mi
          requests:
            cpu: 10m
            memory: 20Mi
    - name: mtx-job
      consumedBTPServices:
        - cap-uaa
        - cap-service-manager
        - cap-saas-registry
      jobDefinition:
        image: docker.image.repo/srv/server:latest
        type: TenantOperation
    - name: job-worker
      consumedBTPServices:
        - cap-uaa
        - cap-service-manager
        - cap-saas-registry
      deploymentDefinition:
        image: docker.image.repo/srv/server:latest
        type: Additional
        env:
          - name: TEST_SEC_REF
            valueFrom:
              secretKeyRef:
                key: someKey
                name: someSecret
                optional: true
status:
  state: Processing
