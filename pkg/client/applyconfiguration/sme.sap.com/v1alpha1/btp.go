/*
SPDX-FileCopyrightText: 2023 SAP SE or an SAP affiliate company and cap-operator contributors
SPDX-License-Identifier: Apache-2.0
*/
// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

// BTPApplyConfiguration represents an declarative configuration of the BTP type for use
// with apply.
type BTPApplyConfiguration struct {
	Services []ServiceInfoApplyConfiguration `json:"services,omitempty"`
}

// BTPApplyConfiguration constructs an declarative configuration of the BTP type for use with
// apply.
func BTP() *BTPApplyConfiguration {
	return &BTPApplyConfiguration{}
}

// WithServices adds the given value to the Services field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the Services field.
func (b *BTPApplyConfiguration) WithServices(values ...*ServiceInfoApplyConfiguration) *BTPApplyConfiguration {
	for i := range values {
		if values[i] == nil {
			panic("nil value passed to WithServices")
		}
		b.Services = append(b.Services, *values[i])
	}
	return b
}
