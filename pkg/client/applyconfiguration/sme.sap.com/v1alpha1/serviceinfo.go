/*
SPDX-FileCopyrightText: 2024 SAP SE or an SAP affiliate company and cap-operator contributors
SPDX-License-Identifier: Apache-2.0
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

// ServiceInfoApplyConfiguration represents an declarative configuration of the ServiceInfo type for use
// with apply.
type ServiceInfoApplyConfiguration struct {
	Name   *string `json:"name,omitempty"`
	Secret *string `json:"secret,omitempty"`
	Class  *string `json:"class,omitempty"`
}

// ServiceInfoApplyConfiguration constructs an declarative configuration of the ServiceInfo type for use with
// apply.
func ServiceInfo() *ServiceInfoApplyConfiguration {
	return &ServiceInfoApplyConfiguration{}
}

// WithName sets the Name field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Name field is set to the value of the last call.
func (b *ServiceInfoApplyConfiguration) WithName(value string) *ServiceInfoApplyConfiguration {
	b.Name = &value
	return b
}

// WithSecret sets the Secret field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Secret field is set to the value of the last call.
func (b *ServiceInfoApplyConfiguration) WithSecret(value string) *ServiceInfoApplyConfiguration {
	b.Secret = &value
	return b
}

// WithClass sets the Class field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Class field is set to the value of the last call.
func (b *ServiceInfoApplyConfiguration) WithClass(value string) *ServiceInfoApplyConfiguration {
	b.Class = &value
	return b
}
