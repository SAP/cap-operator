/*
SPDX-FileCopyrightText: 2023 SAP SE or an SAP affiliate company and cap-operator contributors
SPDX-License-Identifier: Apache-2.0
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/sap/cap-operator/pkg/apis/sme.sap.com/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// CAPTenantOperationLister helps list CAPTenantOperations.
// All objects returned here must be treated as read-only.
type CAPTenantOperationLister interface {
	// List lists all CAPTenantOperations in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.CAPTenantOperation, err error)
	// CAPTenantOperations returns an object that can list and get CAPTenantOperations.
	CAPTenantOperations(namespace string) CAPTenantOperationNamespaceLister
	CAPTenantOperationListerExpansion
}

// cAPTenantOperationLister implements the CAPTenantOperationLister interface.
type cAPTenantOperationLister struct {
	indexer cache.Indexer
}

// NewCAPTenantOperationLister returns a new CAPTenantOperationLister.
func NewCAPTenantOperationLister(indexer cache.Indexer) CAPTenantOperationLister {
	return &cAPTenantOperationLister{indexer: indexer}
}

// List lists all CAPTenantOperations in the indexer.
func (s *cAPTenantOperationLister) List(selector labels.Selector) (ret []*v1alpha1.CAPTenantOperation, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.CAPTenantOperation))
	})
	return ret, err
}

// CAPTenantOperations returns an object that can list and get CAPTenantOperations.
func (s *cAPTenantOperationLister) CAPTenantOperations(namespace string) CAPTenantOperationNamespaceLister {
	return cAPTenantOperationNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// CAPTenantOperationNamespaceLister helps list and get CAPTenantOperations.
// All objects returned here must be treated as read-only.
type CAPTenantOperationNamespaceLister interface {
	// List lists all CAPTenantOperations in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.CAPTenantOperation, err error)
	// Get retrieves the CAPTenantOperation from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.CAPTenantOperation, error)
	CAPTenantOperationNamespaceListerExpansion
}

// cAPTenantOperationNamespaceLister implements the CAPTenantOperationNamespaceLister
// interface.
type cAPTenantOperationNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all CAPTenantOperations in the indexer for a given namespace.
func (s cAPTenantOperationNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.CAPTenantOperation, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.CAPTenantOperation))
	})
	return ret, err
}

// Get retrieves the CAPTenantOperation from the indexer for a given namespace and name.
func (s cAPTenantOperationNamespaceLister) Get(name string) (*v1alpha1.CAPTenantOperation, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("captenantoperation"), name)
	}
	return obj.(*v1alpha1.CAPTenantOperation), nil
}
