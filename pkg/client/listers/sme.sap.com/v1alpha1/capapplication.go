/*
SPDX-FileCopyrightText: 2023 SAP SE or an SAP affiliate company and cap-operator contributors
SPDX-License-Identifier: Apache-2.0
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/sap/cap-operator/pkg/apis/sme.sap.com/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// CAPApplicationLister helps list CAPApplications.
// All objects returned here must be treated as read-only.
type CAPApplicationLister interface {
	// List lists all CAPApplications in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.CAPApplication, err error)
	// CAPApplications returns an object that can list and get CAPApplications.
	CAPApplications(namespace string) CAPApplicationNamespaceLister
	CAPApplicationListerExpansion
}

// cAPApplicationLister implements the CAPApplicationLister interface.
type cAPApplicationLister struct {
	indexer cache.Indexer
}

// NewCAPApplicationLister returns a new CAPApplicationLister.
func NewCAPApplicationLister(indexer cache.Indexer) CAPApplicationLister {
	return &cAPApplicationLister{indexer: indexer}
}

// List lists all CAPApplications in the indexer.
func (s *cAPApplicationLister) List(selector labels.Selector) (ret []*v1alpha1.CAPApplication, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.CAPApplication))
	})
	return ret, err
}

// CAPApplications returns an object that can list and get CAPApplications.
func (s *cAPApplicationLister) CAPApplications(namespace string) CAPApplicationNamespaceLister {
	return cAPApplicationNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// CAPApplicationNamespaceLister helps list and get CAPApplications.
// All objects returned here must be treated as read-only.
type CAPApplicationNamespaceLister interface {
	// List lists all CAPApplications in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.CAPApplication, err error)
	// Get retrieves the CAPApplication from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.CAPApplication, error)
	CAPApplicationNamespaceListerExpansion
}

// cAPApplicationNamespaceLister implements the CAPApplicationNamespaceLister
// interface.
type cAPApplicationNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all CAPApplications in the indexer for a given namespace.
func (s cAPApplicationNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.CAPApplication, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.CAPApplication))
	})
	return ret, err
}

// Get retrieves the CAPApplication from the indexer for a given namespace and name.
func (s cAPApplicationNamespaceLister) Get(name string) (*v1alpha1.CAPApplication, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("capapplication"), name)
	}
	return obj.(*v1alpha1.CAPApplication), nil
}
