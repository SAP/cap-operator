/*
SPDX-FileCopyrightText: 2024 SAP SE or an SAP affiliate company and cap-operator contributors
SPDX-License-Identifier: Apache-2.0
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/sap/cap-operator/pkg/apis/sme.sap.com/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// CAPApplicationVersionLister helps list CAPApplicationVersions.
// All objects returned here must be treated as read-only.
type CAPApplicationVersionLister interface {
	// List lists all CAPApplicationVersions in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.CAPApplicationVersion, err error)
	// CAPApplicationVersions returns an object that can list and get CAPApplicationVersions.
	CAPApplicationVersions(namespace string) CAPApplicationVersionNamespaceLister
	CAPApplicationVersionListerExpansion
}

// cAPApplicationVersionLister implements the CAPApplicationVersionLister interface.
type cAPApplicationVersionLister struct {
	indexer cache.Indexer
}

// NewCAPApplicationVersionLister returns a new CAPApplicationVersionLister.
func NewCAPApplicationVersionLister(indexer cache.Indexer) CAPApplicationVersionLister {
	return &cAPApplicationVersionLister{indexer: indexer}
}

// List lists all CAPApplicationVersions in the indexer.
func (s *cAPApplicationVersionLister) List(selector labels.Selector) (ret []*v1alpha1.CAPApplicationVersion, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.CAPApplicationVersion))
	})
	return ret, err
}

// CAPApplicationVersions returns an object that can list and get CAPApplicationVersions.
func (s *cAPApplicationVersionLister) CAPApplicationVersions(namespace string) CAPApplicationVersionNamespaceLister {
	return cAPApplicationVersionNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// CAPApplicationVersionNamespaceLister helps list and get CAPApplicationVersions.
// All objects returned here must be treated as read-only.
type CAPApplicationVersionNamespaceLister interface {
	// List lists all CAPApplicationVersions in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.CAPApplicationVersion, err error)
	// Get retrieves the CAPApplicationVersion from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.CAPApplicationVersion, error)
	CAPApplicationVersionNamespaceListerExpansion
}

// cAPApplicationVersionNamespaceLister implements the CAPApplicationVersionNamespaceLister
// interface.
type cAPApplicationVersionNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all CAPApplicationVersions in the indexer for a given namespace.
func (s cAPApplicationVersionNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.CAPApplicationVersion, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.CAPApplicationVersion))
	})
	return ret, err
}

// Get retrieves the CAPApplicationVersion from the indexer for a given namespace and name.
func (s cAPApplicationVersionNamespaceLister) Get(name string) (*v1alpha1.CAPApplicationVersion, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("capapplicationversion"), name)
	}
	return obj.(*v1alpha1.CAPApplicationVersion), nil
}
