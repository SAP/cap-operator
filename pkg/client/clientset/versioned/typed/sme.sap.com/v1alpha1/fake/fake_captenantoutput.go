/*
SPDX-FileCopyrightText: 2024 SAP SE or an SAP affiliate company and cap-operator contributors
SPDX-License-Identifier: Apache-2.0
*/

// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v1alpha1 "github.com/sap/cap-operator/pkg/apis/sme.sap.com/v1alpha1"
	smesapcomv1alpha1 "github.com/sap/cap-operator/pkg/client/applyconfiguration/sme.sap.com/v1alpha1"
	typedsmesapcomv1alpha1 "github.com/sap/cap-operator/pkg/client/clientset/versioned/typed/sme.sap.com/v1alpha1"
	gentype "k8s.io/client-go/gentype"
)

// fakeCAPTenantOutputs implements CAPTenantOutputInterface
type fakeCAPTenantOutputs struct {
	*gentype.FakeClientWithListAndApply[*v1alpha1.CAPTenantOutput, *v1alpha1.CAPTenantOutputList, *smesapcomv1alpha1.CAPTenantOutputApplyConfiguration]
	Fake *FakeSmeV1alpha1
}

func newFakeCAPTenantOutputs(fake *FakeSmeV1alpha1, namespace string) typedsmesapcomv1alpha1.CAPTenantOutputInterface {
	return &fakeCAPTenantOutputs{
		gentype.NewFakeClientWithListAndApply[*v1alpha1.CAPTenantOutput, *v1alpha1.CAPTenantOutputList, *smesapcomv1alpha1.CAPTenantOutputApplyConfiguration](
			fake.Fake,
			namespace,
			v1alpha1.SchemeGroupVersion.WithResource("captenantoutputs"),
			v1alpha1.SchemeGroupVersion.WithKind("CAPTenantOutput"),
			func() *v1alpha1.CAPTenantOutput { return &v1alpha1.CAPTenantOutput{} },
			func() *v1alpha1.CAPTenantOutputList { return &v1alpha1.CAPTenantOutputList{} },
			func(dst, src *v1alpha1.CAPTenantOutputList) { dst.ListMeta = src.ListMeta },
			func(list *v1alpha1.CAPTenantOutputList) []*v1alpha1.CAPTenantOutput {
				return gentype.ToPointerSlice(list.Items)
			},
			func(list *v1alpha1.CAPTenantOutputList, items []*v1alpha1.CAPTenantOutput) {
				list.Items = gentype.FromPointerSlice(items)
			},
		),
		fake,
	}
}
