/*
SPDX-FileCopyrightText: 2025 SAP SE or an SAP affiliate company and cap-operator contributors
SPDX-License-Identifier: Apache-2.0
*/

// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v1alpha1 "github.com/sap/cap-operator/pkg/apis/sme.sap.com/v1alpha1"
	smesapcomv1alpha1 "github.com/sap/cap-operator/pkg/client/applyconfiguration/sme.sap.com/v1alpha1"
	typedsmesapcomv1alpha1 "github.com/sap/cap-operator/pkg/client/clientset/versioned/typed/sme.sap.com/v1alpha1"
	gentype "k8s.io/client-go/gentype"
)

// fakeDomains implements DomainInterface
type fakeDomains struct {
	*gentype.FakeClientWithListAndApply[*v1alpha1.Domain, *v1alpha1.DomainList, *smesapcomv1alpha1.DomainApplyConfiguration]
	Fake *FakeSmeV1alpha1
}

func newFakeDomains(fake *FakeSmeV1alpha1, namespace string) typedsmesapcomv1alpha1.DomainInterface {
	return &fakeDomains{
		gentype.NewFakeClientWithListAndApply[*v1alpha1.Domain, *v1alpha1.DomainList, *smesapcomv1alpha1.DomainApplyConfiguration](
			fake.Fake,
			namespace,
			v1alpha1.SchemeGroupVersion.WithResource("domains"),
			v1alpha1.SchemeGroupVersion.WithKind("Domain"),
			func() *v1alpha1.Domain { return &v1alpha1.Domain{} },
			func() *v1alpha1.DomainList { return &v1alpha1.DomainList{} },
			func(dst, src *v1alpha1.DomainList) { dst.ListMeta = src.ListMeta },
			func(list *v1alpha1.DomainList) []*v1alpha1.Domain { return gentype.ToPointerSlice(list.Items) },
			func(list *v1alpha1.DomainList, items []*v1alpha1.Domain) {
				list.Items = gentype.FromPointerSlice(items)
			},
		),
		fake,
	}
}
